name: Fortify Scan - Salesforce (Simplified)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment'
        required: true
        default: 'RQA'
        type: choice
        options: [RQA, TL]

permissions:
  contents: read

jobs:
  fortify:
    runs-on: arc-small-container
    container:
      image: docker.artifactory.fpl.com/fortify/fortify-cloudscan-client:latest
      options: --memory=4g
    env:
      BUILD_ID: salesforce-${{ github.run_id }}

    steps:
      - name: Install Salesforce CLI
        shell: bash
        run: |
          set -e
          if command -v apk >/dev/null 2>&1; then apk add --no-cache nodejs npm; \
          elif command -v apt-get >/dev/null 2>&1; then apt-get update && apt-get install -y nodejs npm; \
          elif command -v yum >/dev/null 2>&1; then yum install -y nodejs npm; fi
          npm install --global @salesforce/cli

      - name: Fortify Scan
        shell: bash
        run: |
          set -e

          if [[ "${{ github.event.inputs.environment }}" == "RQA" ]]; then
            echo "SFDX_AUTH_URL=${{ secrets.SFDX_AUTH_URL_RQA }}" >> "$GITHUB_ENV"
          else
            echo "SFDX_AUTH_URL=${{ secrets.SFDX_AUTH_URL_TL }}" >> "$GITHUB_ENV"
          fi

          # Authenticate to Salesforce
          echo "$SFDX_AUTH_URL" > sfdx-auth-url.txt
          sf org login sfdx-url --sfdx-url-file sfdx-auth-url.txt --set-default
          
          # Create temporary project file
          echo '{
            "packageDirectories": [
              {
                "path": "code",
                "default": true
              }
            ],
            "namespace": "",
            "sfdcApiVersion": "58.0",
            "sourceApiVersion": "58.0"
          }' > sfdx-project.json

          # Retrieve components
          sf project retrieve start \
            --metadata ApexClass,ApexTrigger,ApexPage,ApexComponent,LightningComponentBundle,AuraDefinitionBundle,StaticResource \
            --json > /dev/null
          
          # Fortify Analyze
          sourceanalyzer -b "$BUILD_ID" -clean || true
          sourceanalyzer -b "$BUILD_ID" -logfile target/fortify/scan.log -apex "code/**/*" -scan -f target/fortify/scan.fpr
          
          # Generate reports (CSV and PDF)
          mkdir -p target/fortify
          for level in critical high medium low; do
            FPRUtility -project target/fortify/scan.fpr -information -listIssues -search -query "[fortify priority order]:$level" -outputFormat CSV > "${level}.csv"
          done

          if command -v BIRTReportGenerator >/dev/null 2>&1; then
            BIRTReportGenerator -template 'OWASP Top 10' --SecurityIssueDetails --IncludeDescOfKeyTerminology --UseFortifyPriorityOrder -source target/fortify/scan.fpr -format pdf --Version 'OWASP Top 10 2017' -output FortifyReport.pdf
          fi

          # Cleanup
          rm sfdx-auth-url.txt
          rm sfdx-project.json
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fortify-results-${{ github.event.inputs.environment }}
          path: |
            critical.csv
            high.csv
            medium.csv
            low.csv
            FortifyReport.pdf
            target/fortify/scan.log
            target/fortify/scan.fpr
          retention-days: 30
