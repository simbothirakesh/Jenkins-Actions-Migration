name: Fortify Scan - Salesforce (Repo Only)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (RQA or TL)'
        required: true
        default: 'TL'
        type: choice
        options: [RQA, TL]

permissions:
  contents: read

concurrency:
  group: fortify-${{ github.ref }}
  cancel-in-progress: false

jobs:
  fortify:
    runs-on: arc-container-small
    container:
      image: docker.artifactory.fpl.com/fortify/fortify-cloudscan-client:latest
      options: --memory=4g

    env:
      # Mirror Jenkins env
      HOME: /opt/fortify
      SCA_VM_OPTS: -Xmx2750M
      JAVA_TOOL_OPTIONS: -Duser.home=/opt/fortify

      # Fortify build + source locations (adjust globs if needed)
      BUILD_ID: salesforce-${{ github.run_id }}
      SRC_GLOBS: 'force-app/**/* code/**/* src/**/*'

    steps:
      # Checkout needs tar (and sometimes git) inside slim containers
      - name: Install prerequisites (tar, git)
        shell: bash
        run: |
          set -e
          if command -v apk >/dev/null 2>&1; then
            apk add --no-cache tar git
          elif command -v apt-get >/dev/null 2>&1; then
            apt-get update && apt-get install -y tar git
          elif command -v yum >/dev/null 2>&1; then
            yum install -y tar git
          elif command -v zypper >/dev/null 2>&1; then
            zypper --non-interactive install tar git
          else
            echo "No supported package manager found; need tar for checkout."
            exit 1
          fi

      - name: Checkout repository (read-only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false

      # Add Fortify bin just like Jenkins PATH="/opt/fortify/bin:$PATH"
      - name: Add Fortify bin to PATH
        run: echo "/opt/fortify/bin" >> "$GITHUB_PATH"

      - name: Verify Fortify CLI available
        run: |
          which sourceanalyzer || { echo "sourceanalyzer not found in /opt/fortify/bin"; exit 1; }
          sourceanalyzer -version

      - name: Validate source exists
        shell: bash
        run: |
          if ! echo "$SRC_GLOBS" | xargs -I{} sh -lc 'ls -1d {} 2>/dev/null' | grep -q .; then
            echo "::error::No source found under: $SRC_GLOBS. Update SRC_GLOBS to match your repo."
            exit 1
          fi
          echo "Sample files to be translated:"
          echo "$SRC_GLOBS" | xargs -I{} sh -lc 'ls -1d {} 2>/dev/null' | head -n 10

      - name: Fortify Translate (scan from repo root)
        shell: bash
        run: |
          mkdir -p target/fortify
          sourceanalyzer -b "$BUILD_ID" -clean || true
          if [ -f "./sobjects.json" ]; then
            sourceanalyzer -b "$BUILD_ID" -apex $SRC_GLOBS \
              -apex-sobject-path "./sobjects.json" \
              -logfile target/fortify/translate.log
          else
            sourceanalyzer -b "$BUILD_ID" -apex $SRC_GLOBS \
              -logfile target/fortify/translate.log
          fi

      - name: Fortify Scan
        run: |
          sourceanalyzer -b "$BUILD_ID" -scan \
            -f target/fortify/scan.fpr \
            -logfile target/fortify/scan.log

      - name: Generate CSVs (critical/high/medium/low)
        run: |
          for level in critical high medium low; do
            FPRUtility -project target/fortify/scan.fpr \
              -information -listIssues \
              -search -query "[fortify priority order]:$level" \
              -outputFormat CSV > "${level}.csv"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fortify-results-${{ github.event.inputs.environment }}
          path: |
            critical.csv
            high.csv
            medium.csv
            low.csv
            target/fortify/translate.log
            target/fortify/scan.log
            target/fortify/scan.fpr
          retention-days: 30