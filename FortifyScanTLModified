name: Fortify Scan

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (RQA or TL)'
        required: true
        default: 'TL'
        type: choice
        options: [RQA, TL]

permissions:
  contents: read

concurrency:
  group: fortify-${{ github.ref }}
  cancel-in-progress: false

jobs:
  fortify:
    runs-on: arc-container-small
    container:
      image: docker.artifactory.fpl.com/fortify/fortify-cloudscan-client:latest
      options: --memory=4g

    env:
      HOME: /opt/fortify
      SCA_VM_OPTS: -Xmx2750M
      JAVA_TOOL_OPTIONS: -Duser.home=/opt/fortify
      BUILD_ID: meinservice-${{ github.run_id }}

    steps:
      # Minimal base utils for checkout
      - name: Install prerequisites (tar, git)
        shell: bash
        run: |
          set -e
          if command -v apk >/dev/null 2>&1; then
            apk add --no-cache tar git
          elif command -v apt-get >/dev/null 2>&1; then
            apt-get update && apt-get install -y tar git
          elif command -v yum >/dev/null 2>&1; then
            yum install -y tar git
          elif command -v zypper >/dev/null 2>&1; then
            zypper --non-interactive install tar git
          else
            echo "No supported package manager found; tar is required for checkout."
            exit 1
          fi

      - name: Checkout repository (read-only)
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false

      # Discover Fortify install path and expose it (no hard-coded paths)
      - name: Discover Fortify path
        id: fortify
        shell: bash
        run: |
          SA_BIN="$(command -v sourceanalyzer || true)"
          if [ -z "$SA_BIN" ]; then
            echo "::error::sourceanalyzer not found in PATH inside the container."
            exit 1
          fi
          FORTIFY_BIN_DIR="$(dirname "$SA_BIN")"
          echo "bin=$FORTIFY_BIN_DIR" >> "$GITHUB_OUTPUT"
          echo "Fortify bin: $FORTIFY_BIN_DIR"
          echo "$FORTIFY_BIN_DIR" >> "$GITHUB_PATH"

      - name: Validate repo-root metadata presence
        shell: bash
        run: |
          echo "Repo root contents (top-level):"
          ls -la | sed -n '1,80p'
          # Not mandatory, but helpful if you keep sobjects.json at root
          if [ -f "./sobjects.json" ]; then
            echo "Found sobjects.json at repo root."
          else
            echo "No sobjects.json at root â€” proceeding without it."
          fi

      - name: Fortify Translate (scan from repo root)
        shell: bash
        run: |
          mkdir -p target/fortify
          sourceanalyzer -b "$BUILD_ID" -clean || true
          # Scan all metadata from repo root; no subfolder like force-app/ or code/
          if [ -f "./sobjects.json" ]; then
            sourceanalyzer -b "$BUILD_ID" \
              -apex "./**/*" \
              -apex-sobject-path "./sobjects.json" \
              -logfile target/fortify/translate.log
          else
            sourceanalyzer -b "$BUILD_ID" \
              -apex "./**/*" \
              -logfile target/fortify/translate.log
          fi

      - name: Fortify Scan
        shell: bash
        run: |
          sourceanalyzer -b "$BUILD_ID" -scan \
            -f target/fortify/scan.fpr \
            -logfile target/fortify/scan.log

      - name: Generate CSVs (critical/high/medium/low)
        shell: bash
        run: |
          for level in critical high medium low; do
            FPRUtility -project target/fortify/scan.fpr \
              -information -listIssues \
              -search -query "[fortify priority order]:$level" \
              -outputFormat CSV > "${level}.csv"
          done

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: fortify-scan-reports-${{ github.event.inputs.environment }}
          path: |
            critical.csv
            high.csv
            medium.csv
            low.csv
            target/fortify/translate.log
            target/fortify/scan.log
            target/fortify/scan.fpr
          if-no-files-found: warn
          retention-days: 30
