name: Fortify Scan - Salesforce (Repo Only)

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target Environment (RQA or TL)'
        required: true
        default: 'TL'
        type: choice
        options: [RQA, TL]

permissions:
  contents: read

concurrency:
  group: fortify-${{ github.ref }}
  cancel-in-progress: false

jobs:
  fortify:
    runs-on: arc-container-small
    container:
      image: docker.artifactory.fpl.com/fortify/fortify-cloudscan-client:latest
      options: --memory=4g

    env:
      HOME: /opt/fortify
      SCA_VM_OPTS: -Xmx2750M
      JAVA_TOOL_OPTIONS: -Duser.home=/opt/fortify
      BUILD_ID: salesforce-${{ github.run_id }}
      SRC_GLOBS: '.'

    steps:
      - name: Install prerequisites
        shell: bash
        run: |
          set -e
          if command -v apk >/dev/null 2>&1; then
            apk add --no-cache tar git
          elif command -v apt-get >/dev/null 2>&1; then
            apt-get update && apt-get install -y tar git
          elif command -v yum >/dev/null 2>&1; then
            yum install -y tar git
          elif command -v zypper >/dev/null 2>&1; then
            zypper --non-interactive install tar git
          else
            echo "No supported package manager found"; exit 1
          fi

      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          persist-credentials: false

      - name: Add Fortify bin to PATH
        run: echo "/opt/fortify/bin" >> "$GITHUB_PATH"

      - name: Verify Fortify CLI
        run: |
          which sourceanalyzer
          sourceanalyzer -version
          which FPRUtility
          which BIRTReportGenerator

      - name: Fortify Translate
        shell: bash
        run: |
          mkdir -p target/fortify
          sourceanalyzer -b "$BUILD_ID" -clean || true
          if [ -f "./sobjects.json" ]; then
            sourceanalyzer -b "$BUILD_ID" -apex $SRC_GLOBS -apex-sobject-path "./sobjects.json" -logfile target/fortify/translate.log
          else
            sourceanalyzer -b "$BUILD_ID" -apex $SRC_GLOBS -logfile target/fortify/translate.log
          fi

      - name: Fortify Scan
        run: |
          sourceanalyzer -b "$BUILD_ID" -scan -f target/fortify/scan.fpr -logfile target/fortify/scan.log

      - name: Generate CSVs
        run: |
          for level in critical high medium low; do
            FPRUtility -project target/fortify/scan.fpr -information -listIssues -search -query "[fortify priority order]:$level" -outputFormat CSV > "${level}.csv"
          done
          FPRUtility -project target/fortify/scan.fpr -information -listIssues -search -queryAll -outputFormat CSV > issues.csv

      - name: Generate PDF report
        run: |
          BIRTReportGenerator -template 'OWASP Top 10' --SecurityIssueDetails --IncludeDescOfKeyTerminology --UseFortifyPriorityOrder \
            -source target/fortify/scan.fpr -format pdf --Version 'OWASP Top 10 2017' -output FortifyReport.pdf

      - name: Upload artifacts (GHES-compatible)
        uses: actions/upload-artifact@v3
        with:
          name: fortify-results-${{ github.event.inputs.environment }}
          path: |
            FortifyReport.pdf
            issues.csv
            critical.csv
            high.csv
            medium.csv
            low.csv
            target/fortify/translate.log
            target/fortify/scan.log
            target/fortify/scan.fpr
          retention-days: 30

      - name: Run summary with download pointers
        if: always()
        shell: bash
        run: |
          {
            echo "## Fortify results (${GITHUB_EVENT_INPUTS_ENVIRONMENT:-${{ github.event.inputs.environment }}})"
            echo "- **PDF:** FortifyReport.pdf"
            echo "- **CSVs:** critical.csv, high.csv, medium.csv, low.csv, issues.csv"
            echo "- **FPR:** target/fortify/scan.fpr"
            echo ""
            echo "_Use the **Artifacts** panel for direct downloads from this run._"
          } >> "$GITHUB_STEP_SUMMARY"
