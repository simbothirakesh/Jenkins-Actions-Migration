name: MeinService - Test Automation (Reusable)

on:
  workflow_call:
    inputs:
      envChoice:
        description: 'Environment to run tests against'
        required: true
        type: string
    secrets:
      MEINSERVICE_RQA_PROPERTIES_BASE64:
        required: true
      MEINSERVICE_TL_PROPERTIES_BASE64:
        required: true
      MEINSERVICE_LOGINAS_PROPERTIES:
        required: true
      MEINSERVICE_AKBM_TL_BASE64:
        required: true
      MEINSERVICE_AKBM_RQA_BASE64:
        required: true
      MEINSERVICE_AKBM_TL_TROUBLESHOOTING_BASE64:
        required: true
      MEINSERVICE_KAUFLAND_BASE64:
        required: true
      MEINSERVICE_MASTER_PASSWORD:
        required: true
      EMAIL_SERVER_ADDRESS:
        required: true
      EMAIL_SERVER_PORT:
        required: true
      EMAIL_RECIPIENTS_QA:
        required: true

jobs:
  test:
    runs-on: arc-small-container
    container:
      image: docker.artifactory.fpl.com/markhobson/maven-chrome:jdk-11
    env:
      CHROME_DRIVER: "/usr/bin/chromedriver"
      HTTPS_PROXY: "http://b2b-http.fpl.com:8080"
      HTTP_PROXY: "http://b2b-http.fpl.com:8080"
      https_proxy: "http://b2b-http.fpl.com:8080"
      http_proxy: "http://b2b-http.fpl.com:8080"
      NO_PROXY: "localhost,127.0.0.1,.fpl.com,.corp,.internal"
      no_proxy: "localhost,127.0.0.1,.fpl.com,.corp,.internal"
      JAVA_TOOL_OPTIONS: "-Dhttps.proxyHost=b2b-http.fpl.com -Dhttps.proxyPort=8080 -Dhttp.proxyHost=b2b-http.fpl.com -Dhttp.proxyPort=8080 -Dhttp.nonProxyHosts=localhost|127.0.0.1|*.fpl.com|*.corp|*.internal"
      MEINSERVICE_CREDENTIALS_RQA: ${{ secrets.MEINSERVICE_RQA_PROPERTIES_BASE64 }}
      MEINSERVICE_CREDENTIALS_TL: ${{ secrets.MEINSERVICE_TL_PROPERTIES_BASE64 }}
      MEINSERVICE_CREDENTIALS_LOGIN_AS: ${{ secrets.MEINSERVICE_LOGINAS_PROPERTIES }}
      CONNECTION_FILE_FOR_AKBM_TL: ${{ secrets.MEINSERVICE_AKBM_TL_BASE64 }}
      CONNECTION_FILE_FOR_AKBM_RQA: ${{ secrets.MEINSERVICE_AKBM_RQA_BASE64 }}
      CONNECTION_FILE_FOR_AKBM_TL_TROUBLE_SHOOTING: ${{ secrets.MEINSERVICE_AKBM_TL_TROUBLESHOOTING_BASE64 }}
      CONNECTION_FILE_FOR_KAUFLAND: ${{ secrets.MEINSERVICE_KAUFLAND_BASE64 }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: gradle

      - name: Create directories
        run: |
          mkdir -p ./src/test/resources
          mkdir -p ./src/main/resources/akbm
          mkdir -p ./src/main/resources/kaufland
          mkdir -p ./gradletmp
          mkdir -p report screenshots logs

      - name: Setup test configuration files
        run: |
          ENV_CHOICE="${{ inputs.envChoice }}"
          echo "Running tests in environment: $ENV_CHOICE"
          if [ "$ENV_CHOICE" = "RQA" ]; then
            echo "ACTUAL_ENVIRONMENT=RQA" >> $GITHUB_ENV
            echo "$MEINSERVICE_CREDENTIALS_RQA" | base64 -d > ./src/test/resources/test.properties
            echo "$CONNECTION_FILE_FOR_AKBM_RQA" | base64 -d > ./src/main/resources/akbm/akbm_rqa.ppk
          elif [ "$ENV_CHOICE" = "TL" ]; then
            echo "ACTUAL_ENVIRONMENT=TL" >> $GITHUB_ENV
            echo "$MEINSERVICE_CREDENTIALS_TL" | base64 -d > ./src/test/resources/test.properties
            echo "$CONNECTION_FILE_FOR_AKBM_TL" | base64 -d > ./src/main/resources/akbm/akbm_tl.ppk
            echo "$CONNECTION_FILE_FOR_AKBM_TL_TROUBLE_SHOOTING" | base64 -d > ./src/main/resources/akbm/TL-MEINSERVICE-DWH.ppk
          fi
          echo "$CONNECTION_FILE_FOR_KAUFLAND" | base64 -d > ./src/main/resources/kaufland/MEINSERVICE_TL_OSCA.ppk
          echo "$MEINSERVICE_CREDENTIALS_LOGIN_AS" > ./src/test/resources/loginAs.properties

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Clean gradle cache
        run: ./gradlew --gradle-user-home ./gradletmp clean

      - name: Connectivity diagnostics
        run: |
          set -e
          java -XshowSettings:properties -version 2>&1 | grep -i -E "proxy(host|port)|nonProxyHosts" || true
          curl -sSIL https://test.salesforce.com

      - name: Run tests
        run: |
          ./gradlew --gradle-user-home ./gradletmp --build-cache test \
            -PmasterPassword=${{ secrets.MEINSERVICE_MASTER_PASSWORD }} \
            -Dhttps.proxyHost=b2b-http.fpl.com -Dhttps.proxyPort=8080 \
            -Dhttp.proxyHost=b2b-http.fpl.com  -Dhttp.proxyPort=8080 \
            -Dhttp.nonProxyHosts="localhost|127.0.0.1|*.fpl.com|*.corp|*.internal" \
            --stacktrace --continue
          STATUS=$?
          if [ $STATUS -ne 0 ]; then
            echo "One or more Gradle tests failed!"
            exit 1
          else
            echo "All tests passed successfully!"
          fi

      - name: Archive artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-artifacts
          path: |
            report/*
            screenshots/*
            logs/*
            build/test-results/**/*.xml
            build/reports/tests/test/*
          retention-days: 15
          if-no-files-found: ignore

      - name: Send success notification
        if: success()
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: ${{ secrets.EMAIL_SERVER_ADDRESS }}
          server_port: ${{ secrets.EMAIL_SERVER_PORT }}
          from: 'noreply@fpl.com'
          subject: 'MEINSERVICE QS:"${{ env.ACTUAL_ENVIRONMENT }}" Successful: -> ${{ github.repository }}'
          html_body: |
            Project: ${{ github.repository }}<br>
            Build Number: ${{ github.run_number }}<br>
            Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_RECIPIENTS_QA }}

      - name: Send failure notification
        if: failure()
        uses: dawidd6/action-send-mail@v5
        with:
          server_address: ${{ secrets.EMAIL_SERVER_ADDRESS }}
          server_port: ${{ secrets.EMAIL_SERVER_PORT }}
          from: 'noreply@fpl.com'
          subject: 'MEINSERVICE QS:"${{ env.ACTUAL_ENVIRONMENT }}" Failed: -> ${{ github.repository }}'
          html_body: |
            Project: ${{ github.repository }}<br>
            Build Number: ${{ github.run_number }}<br>
            Build URL: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_RECIPIENTS_QA }}
