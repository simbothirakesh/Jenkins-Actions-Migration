name: PR Validation for RQA Branch

on:
  pull_request:
    branches:
      - RQA

jobs:
  validate:
    runs-on: arc-small-container
    continue-on-error: true
    env:
      SRC_PATH: force-app/main/default
      DELTA_PATH: delta-components
    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
        continue-on-error: true

      # Setup Node.js 20+ and Java 17 for Salesforce Code Analyzer
      - name: Setup Node.js 20+
        uses: actions/setup-node@v4
        with:
          node-version: '20'
        continue-on-error: true
      - name: Setup Java 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
        continue-on-error: true

      # Install Salesforce CLI and Code Analyzer
      - name: Install Salesforce CLI and Code Analyzer
        run: |
          npm install -g @salesforce/cli
          sf plugins install @salesforce/sfdx-scanner
        continue-on-error: true

      # List PR components and changed Apex classes
      - name: List PR components and changed Apex classes
        run: |
          mkdir -p delta-components
          git fetch origin RQA
          git diff --name-only origin/RQA...HEAD > pr-components.txt
          # Copy all changed Salesforce components to delta-components
          while read file; do
            if [ -f "$file" ]; then
              mkdir -p "$(dirname "delta-components/$file")"
              cp "$file" "delta-components/$file"
            fi
          done < pr-components.txt
          # Detect changed Apex classes for test class logic
          grep '^force-app/main/default/classes/.*\.cls$' pr-components.txt > pr-classes.txt || true
        continue-on-error: true

      # Find relevant test classes for changed classes
      - name: Find relevant test classes
        run: |
          > pr-test-classes.txt
          while read classfile; do
            classname=$(basename "$classfile" .cls)
            grep -Eo '\b[A-Za-z0-9_]+Test\b|\b[A-Za-z0-9_]+_Test\b' "$classfile" | sort | uniq >> pr-test-classes.txt
          done < pr-classes.txt
          while read classfile; do
            classname=$(basename "$classfile" .cls)
            if [ -f "force-app/main/default/classes/${classname}Test.cls" ]; then
              echo "${classname}Test" >> pr-test-classes.txt
            fi
            if [ -f "force-app/main/default/classes/${classname}_Test.cls" ]; then
              echo "${classname}_Test" >> pr-test-classes.txt
            fi
          done < pr-classes.txt
          sort pr-test-classes.txt | uniq > pr-test-classes-final.txt
        continue-on-error: true

      # Show PR components, classes, and relevant test classes
      - name: Show PR components, classes, and relevant test classes
        run: |
          echo "PR Components detected in this PR:"
          awk -F "force-app/main/default/" '{if(NF>1) print $2; else print $1}' pr-components.txt || echo "No components detected."
          echo "Apex Classes detected in this PR:"
          awk -F "force-app/main/default/" '{if(NF>1) print $2; else print $1}' pr-classes.txt || echo "No Apex classes detected."
          echo "Relevant Test Classes to run:"
          cat pr-test-classes-final.txt || echo "No relevant test classes detected."
        continue-on-error: true

      # Authenticate and Validate
      - name: Authenticate and Validate
        run: |
          echo "$AUTH_URL_RQA" > auth_url.txt
          sf org login sfdx-url --sfdx-url-file auth_url.txt --alias RQA --set-default
          if [ -s pr-classes.txt ] && [ -n "$(cat pr-classes.txt)" ]; then
            if [ -s pr-test-classes-final.txt ] && [ -n "$(cat pr-test-classes-final.txt)" ]; then
              test_flags=""
              while read testclass; do
                test_flags="$test_flags --tests \"$testclass\""
              done < pr-test-classes-final.txt
              eval sf project deploy validate --source-dir delta-components --target-org RQA --test-level RunSpecifiedTests $test_flags || true
            else
              sf project deploy validate --source-dir delta-components --target-org RQA --test-level RunSpecifiedTests || true
            fi
          else
            sf project deploy validate --source-dir delta-components --target-org RQA || true
          fi
        env:
          AUTH_URL_RQA: ${{ secrets.AUTH_URL_RQA }}
        continue-on-error: true

      # Run Salesforce Scanner (CSV and HTML)
      - name: Run Salesforce Scanner (CSV and HTML)
        run: |
          if [ -s pr-components.txt ]; then
            sfdx scanner run --target delta-components --format csv --outfile sfscanner-report.csv || true
            sfdx scanner run --target delta-components --format html --outfile sfscanner-report.html || true
          else
            echo "No components to scan." > sfscanner-report.csv
            echo "<html><body>No components to scan.</body></html>" > sfscanner-report.html
          fi
        continue-on-error: true

      # Upload reports as artifacts
      - name: Upload reports
        uses: actions/upload-artifact@v3
        with:
          name: validation-reports
          path: |
            pr-components.txt
            pr-classes.txt
            pr-test-classes-final.txt
            sfscanner-report.csv
            sfscanner-report.html
        continue-on-error: true

      # Clean up auth file
      - name: Clean up auth file
        run: rm -f auth_url.txt
        continue-on-error: true
